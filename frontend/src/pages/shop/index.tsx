import gql from "graphql-tag";
import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { urqlClient } from "../../libs/gql-requests";
import * as React from 'react';
import { Box, ChakraProvider, Heading, Stack, StackDivider } from '@chakra-ui/react'  
import theme from "../../components/atoms/theme";
import PrimaryButton from "../../components/molecules/PrimaryButton";
import ButtonGroup from "../../components/organisms/ButtonGroup";
import { ShopId } from "@/components/molecules/ShopId";
import { Card, CardHeader, CardBody, CardFooter } from '@chakra-ui/react'

type Props = {
  shops: {
    shopId: number
    shopName: String
  }[];
};

const Home: NextPage<Props> = (props) => {
  const { shops } = props;
  console.warn(props);
  return (
    <ChakraProvider theme = {theme}>
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
      <h1>Hello, GraphQL</h1>
        {props.shops.map(({shopId, shopName}) => (
          <Card margin='50px'>
            <CardHeader background='red' margin='50px' rounded="10">
              <Heading size='md' color='white'>
                <ShopId shopId={shopId.toString()}/>
              </Heading>
            </CardHeader>

            <CardBody>
              <Stack divider={<StackDivider />} spacing='4'>
                <Box>
                  店舗名: {shopName}
                </Box>
              </Stack>
            </CardBody>
          </Card>
        ))}
        <input type="button" value="inputのボタン"></input>
        {/* ref="http://localhost:3000/shop/1" */}
        <div>
          <PrimaryButton>Click me</PrimaryButton>
          <ButtonGroup name=''>
            <PrimaryButton>Button 1</PrimaryButton>
            <PrimaryButton>Button 2</PrimaryButton>
            <PrimaryButton>Button 3</PrimaryButton>
          </ButtonGroup>
        </div>
      </main>
      <footer>
      </footer>
    </div>
    </ChakraProvider>
  );
};

export const getServerSideProps: GetServerSideProps<Props> = async () => {
  try {
    const client = await urqlClient();
    const postsQuery = gql`
      query {
        allShops {
          shopId,
          shopName
        }
      }
    `;
    const result = await client.query(postsQuery, {}).toPromise();
    //console.warn(result.data.allShops);
    return {
      props: {
        shops: result.data.allShops,
      },
    };
  } catch (e) {
    console.error(e);
    return {
      notFound: true,
    };
  }
};

export default Home;