import gql from "graphql-tag";
import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { urqlClient } from "../../libs/gql-requests";
import * as React from 'react';
import { Box, ChakraProvider, Heading, Stack, StackDivider } from '@chakra-ui/react'  
import theme from "../../components/atoms/theme";
import PrimaryButton from "../../components/molecules/PrimaryButton";
import ButtonGroup from "../../components/organisms/ButtonGroup";
import { ShopId } from "@/components/molecules/ShopId";
import { Card, CardHeader, CardBody, CardFooter, Link, defineStyle } from '@chakra-ui/react'
import Title from "@/components/atoms/Title";

type Props = {
  shops: {
    shopId: number
    shopName: String
    shopItems: {
      itemName: String
      price: number
    }[]
  }[];
};

const Home: NextPage<Props> = (props) => {
  const { shops } = props;
  console.warn(props);
  return (
    <ChakraProvider theme = {theme}>
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
      <Title>店舗一覧</Title>
        {props.shops.map(({shopId, shopName, shopItems}, index) => (
          <Card margin='50px' key={index}>
            <CardHeader background='Lightblue' margin='10px' rounded="10" padding='10px'>
              <Heading size='md' color='white'>
                <Link href={`/shop/${shopId}`}>
                  <ShopId shopId={shopId.toString()}/>
                  <Box>
                    店舗名: {shopName}
                  </Box>
                </Link>
              </Heading>
            </CardHeader>

            <CardBody>
            <Box>
              <Stack divider={<StackDivider />} spacing='1'>
              <Box>
                  店舗詳細: 店舗の詳細を記述してください
              </Box>
              {shopItems.map(({itemName, price}) => (
                <Card>
                  <Box>商品名：{itemName}</Box>
                  <Box>値段：{price}</Box>
                  商品詳細：
                </Card>
              ))}  
              </Stack>
            </Box>
            </CardBody>
          </Card>
        ))}
      </main>
      <footer>
      </footer>
    </div>
    </ChakraProvider>
  );
};

export const getServerSideProps: GetServerSideProps<Props> = async () => {
  try {
    const client = await urqlClient();
    const postsQuery = gql`
      query {
        allShops {
          shopId,
          shopName,
          shopItems {
            itemName,
            price
          }
        }
      }
    `;
    const result = await client.query(postsQuery, {}).toPromise();
    console.warn(result.data.allShops);
    console.warn(result.data.allShops[0].shopItems);
    return {
      props: {
        shops: result.data.allShops,
      },
    };
  } catch (e) {
    console.error(e);
    return {
      notFound: true,
    };
  }
};

export default Home;